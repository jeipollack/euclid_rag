name: Python CI

env:
  PYTHON_VERSION: "3.12"

"on":
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python:
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Run tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ matrix.python }}
          tox-envs: "py,typing"
          tox-plugins: tox-uv

  build:
    if: false  # Disabled for now (enable when ready to push docker images)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: my-local/dev-image
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Graphviz
        run: sudo apt-get install graphviz

      - name: Run tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          tox-envs: "docs"
          tox-plugins: tox-uv

  test-packaging:
    name: Test packaging
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [lint, test, docs]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and test packaging (no upload)
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          upload: false

  pypi:
    if: false  # Disable PyPI release for now
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint, test, docs, test-packaging]
    environment:
      name: pypi
      url: https://pypi.org/p/euclid_rag
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and publish
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
